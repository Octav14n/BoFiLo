apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.chaquo.python'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    def versionPropsFile = file('version.properties')
    def versionBuild
    compileSdk 34

    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }


    /*Wrapping inside a method avoids auto incrementing on every gradle task run. Now it runs only when we build apk*/
    ext.autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    // Hook to check if the release/debug task is among the tasks to be executed.
    //Let's make use of it
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleDebug)) {  /* when run debug task */
            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
            autoIncrementBuildNumber()
        }
    }

    defaultConfig {
        applicationId "eu.schnuff.bofilo"
        minSdkVersion 21
        targetSdk 34
        versionCode 10
        versionName "0.10." + versionBuild
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //setProperty("archivesBaseName", "BoFiLo-$versionName")
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
        python {
            version "3.10"
            pip {
                install('-r', 'requirements.txt')
            }
        }
    }
    buildFeatures {
        viewBinding = true
        compose = true
    }
    buildTypes {
        debug {
            // applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }
    lint {
        abortOnError false
    }
    namespace 'eu.schnuff.bofilo'
}

dependencies {
    // Third party
    implementation 'io.github.ParkSangGwon:tedpermission-normal:3.3.0'
    implementation 'org.apache.commons:commons-text:1.12.0'
    implementation 'androidx.compose.runtime:runtime:1.6.7'
    // GeckoView
    implementation 'org.mozilla.geckoview:geckoview:+'
    // Google/Intellij
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0-alpha13'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Room components
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"
    androidTestImplementation "androidx.room:room-testing:2.6.1"
    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    // Worker component
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.1"
    // UI
    implementation "com.google.android.material:material:1.12.0"
    // Testing
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // Crash reporting
    implementation 'io.sentry:sentry-android:+'

    //implementation 'androidx.compose.material3:material3:+'
    //implementation 'androidx.compose.ui:ui-tooling-preview:+'
    //debugImplementation 'androidx.compose.ui:ui-tooling:+'
    //implementation 'androidx.compose.material:material-icons-core:+'
    //implementation 'androidx.compose.runtime:runtime-livedata:+'
}
